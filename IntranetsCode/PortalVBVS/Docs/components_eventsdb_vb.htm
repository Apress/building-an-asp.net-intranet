<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">Imports</font> System
<font color= "blue">Imports</font> System.Configuration
<font color= "blue">Imports</font> System.Data
<font color= "blue">Imports</font> System.Data.SqlClient
<font color= "blue">Imports</font> ASPNetPortal
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">Namespace</font> ASPNetPortal
<font color= "blue"></font>
<font color= "green">    '*********************************************************************</font>
<font color= "green">    '</font>
<font color= "green">    ' EventDB Class</font>
<font color= "green">    '</font>
<font color= "green">    ' Class that encapsulates all data logic necessary to add/query/delete</font>
<font color= "green">    ' events within the Portal database.</font>
<font color= "green">    '</font>
<font color= "green">    '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    Public Class</font> EventsDB
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' GetEvents Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The GetEvents method returns a DataSet containing all of the</font>
<font color= "green">        ' events for a specific portal module from the events</font>
<font color= "green">        ' database.</font>
<font color= "green">        '</font>
<font color= "green">        ' NOTE: A DataSet is returned from this method to allow this method to support</font>
<font color= "green">        ' both desktop and mobile Web UI.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="GetEvents.htm" style="color:green">GetEvents Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> GetEvents(ByVal moduleId As Integer) As DataSet
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlDataAdapter("GetEvents", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.SelectCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterModuleId <font color= "blue">As </font>New SqlParameter("@ModuleId", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterModuleId.Value = moduleId
<font color= "blue">            </font>myCommand.SelectCommand.Parameters.Add(parameterModuleId)
<font color= "blue"></font>
<font color= "green">            ' Create and Fill the DataSet</font>
<font color= "blue">            Dim </font>myDataSet <font color= "blue">As </font>New DataSet()
<font color= "blue">            </font>myCommand.Fill(myDataSet)
<font color= "blue"></font>
<font color= "green">            ' Return the DataSet</font>
<font color= "blue">            </font>Return <font color= "blue"></font>myDataSet
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' GetSingleEvent Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The GetSingleEvent method returns a SqlDataReader containing details</font>
<font color= "green">        ' about a specific event from the events database.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="GetSingleEvent.htm" style="color:green">GetSingleEvent Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> GetSingleEvent(ByVal itemId As Integer) As SqlDataReader
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("GetSingleEvent", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterItemId <font color= "blue">As </font>New SqlParameter("@ItemId", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterItemId.Value = itemId
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemId)
<font color= "blue"></font>
<font color= "green">            ' Execute the command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            Dim </font>result <font color= "blue">As </font>SqlDataReader = myCommand.ExecuteReader(CommandBehavior.CloseConnection)
<font color= "blue"></font>
<font color= "green">            ' Return the datareader </font>
<font color= "blue">            </font>Return <font color= "blue"></font>result
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' DeleteEvent Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The DeleteEvent method deletes a specified event from</font>
<font color= "green">        ' the events database.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="DeleteEvent.htm" style="color:green">DeleteEvent Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Sub</font> DeleteEvent(ByVal itemID As Integer)
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("DeleteEvent", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterItemID <font color= "blue">As </font>New SqlParameter("@ItemID", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterItemID.Value = itemID
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemID)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute SQL Command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>myCommand.ExecuteNonQuery()
<font color= "blue">            </font>myConnection.Close()
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' AddEvent Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The AddEvent method adds a new event within the Events database table, </font>
<font color= "green">        ' and returns the ItemID value as a result.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="AddEvent.htm" style="color:green">AddEvent Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> AddEvent(ByVal moduleId As Integer, ByVal itemId As Integer, ByVal userName As String, ByVal title As String, ByVal expireDate As DateTime, ByVal description As String, ByVal wherewhen As String) As Integer
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            If </font>userName.Length < 1 <font color= "blue">Then</font>
<font color= "blue">                </font>userName <font color= "blue"></font>= "unknown"
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("AddEvent", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterItemID <font color= "blue">As </font>New SqlParameter("@ItemID", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterItemID.Direction = ParameterDirection.Output
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemID)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterModuleID <font color= "blue">As </font>New SqlParameter("@ModuleID", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterModuleID.Value = moduleId
<font color= "blue">            </font>myCommand.Parameters.Add(parameterModuleID)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterUserName <font color= "blue">As </font>New SqlParameter("@UserName", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterUserName.Value = userName
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserName)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterTitle <font color= "blue">As </font>New SqlParameter("@Title", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterTitle.Value = title
<font color= "blue">            </font>myCommand.Parameters.Add(parameterTitle)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterWhereWhen <font color= "blue">As </font>New SqlParameter("@WhereWhen", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterWhereWhen.Value = wherewhen
<font color= "blue">            </font>myCommand.Parameters.Add(parameterWhereWhen)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterExpireDate <font color= "blue">As </font>New SqlParameter("@ExpireDate", SqlDbType.DateTime, 8)
<font color= "blue">            </font>parameterExpireDate.Value = expireDate
<font color= "blue">            </font>myCommand.Parameters.Add(parameterExpireDate)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterDescription <font color= "blue">As </font>New SqlParameter("@Description", SqlDbType.NVarChar, 2000)
<font color= "blue">            </font>parameterDescription.Value = description
<font color= "blue">            </font>myCommand.Parameters.Add(parameterDescription)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute SQL Command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>myCommand.ExecuteNonQuery()
<font color= "blue">            </font>myConnection.Close()
<font color= "blue"></font>
<font color= "green">            ' Return the new Event ItemID</font>
<font color= "blue">            </font>Return <font color= "blue"></font>CInt(parameterItemID.Value)
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' UpdateEvent Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The UpdateEvent method updates the specified event within</font>
<font color= "green">        ' the Events database table.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="UpdateEvent.htm" style="color:green">UpdateEvent Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Sub</font> UpdateEvent(ByVal moduleId As Integer, ByVal itemId As Integer, ByVal userName As String, ByVal title As String, ByVal expireDate As DateTime, ByVal description As String, ByVal wherewhen As String)
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            If </font>userName.Length < 1 <font color= "blue">Then</font>
<font color= "blue">                </font>userName <font color= "blue"></font>= "unknown"
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("UpdateEvent", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterItemID <font color= "blue">As </font>New SqlParameter("@ItemID", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterItemID.Value = itemId
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemID)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterUserName <font color= "blue">As </font>New SqlParameter("@UserName", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterUserName.Value = userName
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserName)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterTitle <font color= "blue">As </font>New SqlParameter("@Title", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterTitle.Value = title
<font color= "blue">            </font>myCommand.Parameters.Add(parameterTitle)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterWhereWhen <font color= "blue">As </font>New SqlParameter("@WhereWhen", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterWhereWhen.Value = wherewhen
<font color= "blue">            </font>myCommand.Parameters.Add(parameterWhereWhen)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterExpireDate <font color= "blue">As </font>New SqlParameter("@ExpireDate", SqlDbType.DateTime, 8)
<font color= "blue">            </font>parameterExpireDate.Value = expireDate
<font color= "blue">            </font>myCommand.Parameters.Add(parameterExpireDate)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterDescription <font color= "blue">As </font>New SqlParameter("@Description", SqlDbType.NVarChar, 2000)
<font color= "blue">            </font>parameterDescription.Value = description
<font color= "blue">            </font>myCommand.Parameters.Add(parameterDescription)
<font color= "blue"></font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>myCommand.ExecuteNonQuery()
<font color= "blue">            </font>myConnection.Close()
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">    End Class</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">End Namespace</font><font color= "blue"></font>
</pre>