<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">Namespace</font> ASPNetPortal
<font color= "blue"></font>
<font color= "blue">    Public Class</font> EditContacts
<font color= "blue">        Inherits</font> System.Web.UI.Page
<font color= "blue"></font>
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>NameField As System.Web.UI.WebControls.TextBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>RequiredFieldValidator1 As System.Web.UI.WebControls.RequiredFieldValidator
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>RoleField As System.Web.UI.WebControls.TextBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>EmailField As System.Web.UI.WebControls.TextBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>Contact1Field As System.Web.UI.WebControls.TextBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>Contact2Field As System.Web.UI.WebControls.TextBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>updateButton As System.Web.UI.WebControls.LinkButton
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>cancelButton As System.Web.UI.WebControls.LinkButton
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>deleteButton As System.Web.UI.WebControls.LinkButton
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>CreatedBy As System.Web.UI.WebControls.Label
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>CreatedDate As System.Web.UI.WebControls.Label
<font color= "blue"></font>
<font color= "blue">        Private </font>itemId <font color= "blue">As </font>Integer = 0
<font color= "blue">        Private </font>moduleId <font color= "blue">As </font>Integer = 0
<font color= "blue"></font>
<font color= "blue"></font>#Region " Web Form Designer Generated Code "
<font color= "blue"></font>
<font color= "green">        'This call is required by the Web Form Designer.</font>
<font color= "blue">        </font><System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
<font color= "green">            'CODEGEN: This method call is required by the Web Form Designer</font>
<font color= "green">            'Do not modify it using the code editor.</font>
<font color= "blue">            </font>InitializeComponent()
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>#End Region
<font color= "blue"></font>
<font color= "green">        '****************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' The Page_Load event on this Page is used to obtain the ModuleId</font>
<font color= "green">        ' and ItemId of the contact to edit.</font>
<font color= "green">        '</font>
<font color= "green">        ' It then uses the ASPNetPortal.ContactsDB() data component</font>
<font color= "green">        ' to populate the page's edit controls with the contact details.</font>
<font color= "green">        '</font>
<font color= "green">        '****************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
<font color= "blue"></font>
<font color= "green">            ' Determine ModuleId of Contacts Portal Module</font>
<font color= "blue">            </font>moduleId <font color= "blue"></font>= Int32.Parse(Request.Params("Mid"))
<font color= "blue"></font>
<font color= "green">            ' Verify that the current user has access to edit this module</font>
<font color= "blue"></font><font color= "blue">            If </font>PortalSecurity.HasEditPermissions(moduleId) = False <font color= "blue">Then</font>
<font color= "blue">                </font>Response.Redirect("~/Admin/EditAccessDenied.aspx")
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            ' Determine ItemId of Contacts to Update</font>
<font color= "blue"></font><font color= "blue">            If </font>Not (Request.Params("ItemId") Is Nothing) <font color= "blue">Then</font>
<font color= "blue">                </font>itemId <font color= "blue"></font>= Int32.Parse(Request.Params("ItemId"))
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            ' If the page is being requested the first time, determine if an</font>
<font color= "green">            ' contact itemId value is specified, and if so populate page</font>
<font color= "green">            ' contents with the contact details</font>
<font color= "blue"></font><font color= "blue">            If </font>Page.IsPostBack = False <font color= "blue">Then</font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                If </font>itemId <> 0 <font color= "blue">Then</font>
<font color= "blue"></font>
<font color= "green">                    ' Obtain a single row of contact information</font>
<font color= "blue">                    Dim </font>contacts <font color= "blue">As </font>New ASPNetPortal.ContactsDB()
<font color= "blue">                    Dim </font>dr <font color= "blue">As </font>SqlDataReader = contacts.GetSingleContact(itemId)
<font color= "blue"></font>
<font color= "green">                    ' Read first row from database</font>
<font color= "blue">                    </font>dr.Read()
<font color= "blue"></font>
<font color= "blue">                    </font>NameField.Text = CType(dr("Name"), String)
<font color= "blue">                    </font>RoleField.Text = CType(dr("Role"), String)
<font color= "blue">                    </font>EmailField.Text = CType(dr("Email"), String)
<font color= "blue">                    </font>Contact1Field.Text = CType(dr("Contact1"), String)
<font color= "blue">                    </font>Contact2Field.Text = CType(dr("Contact2"), String)
<font color= "blue">                    </font>CreatedBy.Text = CType(dr("CreatedByUser"), String)
<font color= "blue">                    </font>CreatedDate.Text = CType(dr("CreatedDate"), DateTime).ToShortDateString()
<font color= "blue"></font>
<font color= "green">                    ' Close datareader</font>
<font color= "blue">                    </font>dr.Close()
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">                ' Store URL Referrer to return to portal</font>
<font color= "blue">                </font>ViewState("UrlReferrer") = Request.UrlReferrer.ToString()
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '****************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' The UpdateBtn_Click event handler on this Page is used to either</font>
<font color= "green">        ' create or update a contact.  It  uses the ASPNetPortal.ContactsDB()</font>
<font color= "green">        ' data component to encapsulate all data functionality.</font>
<font color= "green">        '</font>
<font color= "green">        '****************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> UpdateBtn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles updateButton.Click
<font color= "blue"></font>
<font color= "green">            ' Only Update if Entered data is Valid</font>
<font color= "blue"></font><font color= "blue">            If </font>Page.IsValid = True <font color= "blue">Then</font>
<font color= "blue"></font>
<font color= "green">                ' Create an instance of the ContactsDB component</font>
<font color= "blue">                Dim </font>contacts <font color= "blue">As </font>New ASPNetPortal.ContactsDB()
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                If </font>itemId = 0 <font color= "blue">Then</font>
<font color= "blue"></font>
<font color= "green">                    ' Add the contact within the contacts table</font>
<font color= "blue">                    </font>contacts.AddContact(moduleId, itemId, Context.User.Identity.Name, NameField.Text, RoleField.Text, EmailField.Text, Contact1Field.Text, Contact2Field.Text)
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                Else</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">                    ' Update the contact within the contacts table</font>
<font color= "blue">                    </font>contacts.UpdateContact(moduleId, itemId, Context.User.Identity.Name, NameField.Text, RoleField.Text, EmailField.Text, Contact1Field.Text, Contact2Field.Text)
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">                ' Redirect back to the portal home page</font>
<font color= "blue">                </font>Response.Redirect(CType(ViewState("UrlReferrer"), String))
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '****************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' The DeleteBtn_Click event handler on this Page is used to delete an</font>
<font color= "green">        ' a contact.  It  uses the ASPNetPortal.ContactsDB()</font>
<font color= "green">        ' data component to encapsulate all data functionality.</font>
<font color= "green">        '</font>
<font color= "green">        '****************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> DeleteBtn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles deleteButton.Click
<font color= "blue"></font>
<font color= "green">            ' Only attempt to delete the item if it is an existing item</font>
<font color= "green">            ' (new items will have "ItemId" of 0)</font>
<font color= "blue"></font><font color= "blue">            If </font>itemId <> 0 <font color= "blue">Then</font>
<font color= "blue"></font>
<font color= "blue">                Dim </font>contacts <font color= "blue">As </font>New ASPNetPortal.ContactsDB()
<font color= "blue">                </font>contacts.DeleteContact(itemId)
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            ' Redirect back to the portal home page</font>
<font color= "blue">            </font>Response.Redirect(CType(ViewState("UrlReferrer"), String))
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '****************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' The CancelBtn_Click event handler on this Page is used to cancel</font>
<font color= "green">        ' out of the page, and return the user back to the portal home</font>
<font color= "green">        ' page.</font>
<font color= "green">        '</font>
<font color= "green">        '****************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> CancelBtn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles cancelButton.Click
<font color= "blue"></font>
<font color= "green">            ' Redirect back to the portal home page</font>
<font color= "blue">            </font>Response.Redirect(CType(ViewState("UrlReferrer"), String))
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">    End Class</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">End Namespace</font><font color= "blue"></font>
</pre>