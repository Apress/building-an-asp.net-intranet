<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">Namespace</font> ASPNetPortal
<font color= "blue"></font>
<font color= "blue">    Public Class</font> ModuleSettingsPage
<font color= "blue">        Inherits</font> System.Web.UI.Page
<font color= "blue"></font>
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>moduleTitle As System.Web.UI.WebControls.TextBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>cacheTime As System.Web.UI.WebControls.TextBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>authEditRoles As System.Web.UI.WebControls.CheckBoxList
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>showMobile As System.Web.UI.WebControls.CheckBox
<font color= "blue">        Protected </font>WithEvents <font color= "blue"></font>ApplyButton As System.Web.UI.WebControls.LinkButton
<font color= "blue"></font>
<font color= "blue">        Private </font>moduleId <font color= "blue">As </font>Integer = 0
<font color= "blue">        Private </font>tabId <font color= "blue">As </font>Integer = 0
<font color= "blue"></font>
<font color= "blue"></font>#Region " Web Form Designer Generated Code "
<font color= "blue"></font>
<font color= "green">        'This call is required by the Web Form Designer.</font>
<font color= "blue">        </font><System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
<font color= "green">            'CODEGEN: This method call is required by the Web Form Designer</font>
<font color= "green">            'Do not modify it using the code editor.</font>
<font color= "blue">            </font>InitializeComponent()
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>#End Region
<font color= "blue"></font>
<font color= "green">        '*******************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' The Page_Load server event handler on this page is used</font>
<font color= "green">        ' to populate the module settings on the page</font>
<font color= "green">        '</font>
<font color= "green">        '*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
<font color= "blue"></font>
<font color= "green">            ' Verify that the current user has access to access this page</font>
<font color= "blue"></font><font color= "blue">            If </font>PortalSecurity.IsInRoles("Admins") = False <font color= "blue">Then</font>
<font color= "blue">                </font>Response.Redirect("~/Admin/EditAccessDenied.aspx")
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            ' Determine Module to Edit</font>
<font color= "blue"></font><font color= "blue">            If </font>Not (Request.Params("mid") Is Nothing) <font color= "blue">Then</font>
<font color= "blue">                </font>moduleId <font color= "blue"></font>= Int32.Parse(Request.Params("mid"))
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "green">            ' Determine Tab to Edit</font>
<font color= "blue"></font><font color= "blue">            If </font>Not (Request.Params("tabid") Is Nothing) <font color= "blue">Then</font>
<font color= "blue">                </font>tabId <font color= "blue"></font>= Int32.Parse(Request.Params("tabid"))
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            If </font>Page.IsPostBack = False <font color= "blue">Then</font>
<font color= "blue">                </font>BindData()
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*******************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' The ApplyChanges_Click server event handler on this page is used</font>
<font color= "green">        ' to save the module settings into the portal configuration system</font>
<font color= "green">        '</font>
<font color= "green">        '*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Private Sub</font> ApplyChanges_Click(ByVal Sender As Object, ByVal e As EventArgs) Handles ApplyButton.Click
<font color= "blue"></font>
<font color= "green">            ' Obtain PortalSettings from Current Context</font>
<font color= "blue">            Dim </font>_portalSettings <font color= "blue">As </font>PortalSettings = CType(HttpContext.Current.Items("PortalSettings"), PortalSettings)
<font color= "blue"></font>
<font color= "blue">            Dim </font>value <font color= "blue">As </font>Object = GetModule()
<font color= "blue"></font><font color= "blue">            If </font>Not (value Is Nothing) <font color= "blue">Then</font>
<font color= "blue"></font>
<font color= "blue">                Dim </font>m <font color= "blue">As </font>ModuleSettings = CType(value, ModuleSettings)
<font color= "blue"></font>
<font color= "green">                ' Construct Authorized User Roles String</font>
<font color= "blue">                Dim </font>editRoles <font color= "blue">As </font>String = ""
<font color= "blue"></font>
<font color= "blue">                Dim </font>item <font color= "blue">As </font>ListItem
<font color= "blue">                For Each</font> item In authEditRoles.Items
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    If </font>item.Selected = True <font color= "blue">Then</font>
<font color= "blue">                        </font>editRoles <font color= "blue"></font>= editRoles & item.Text & ";"
<font color= "blue"></font><font color= "blue">                    End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                Next</font> item
<font color= "blue"></font>
<font color= "green">                ' update module</font>
<font color= "blue">                Dim </font>admin <font color= "blue">As </font>New AdminDB()
<font color= "blue">                </font>admin.UpdateModule(moduleId, m.ModuleOrder, m.PaneName, moduleTitle.Text, Int32.Parse(cacheTime.Text), editRoles, showMobile.Checked)
<font color= "blue"></font>
<font color= "green">                ' Update Textbox Settings</font>
<font color= "blue">                </font>moduleTitle.Text = m.ModuleTitle
<font color= "blue">                </font>cacheTime.Text = m.CacheTime.ToString()
<font color= "blue"></font>
<font color= "green">                ' Populate checkbox list with all security roles for this portal</font>
<font color= "green">                ' and "check" the ones already configured for this module</font>
<font color= "blue">                Dim </font>roles <font color= "blue">As </font>SqlDataReader = admin.GetPortalRoles(_portalSettings.PortalId)
<font color= "blue"></font>
<font color= "green">                ' Clear existing items in checkboxlist</font>
<font color= "blue">                </font>authEditRoles.Items.Clear()
<font color= "blue"></font>
<font color= "blue">                Dim </font>allItem <font color= "blue">As </font>New ListItem()
<font color= "blue">                </font>allItem.Text = "All Users"
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                If </font>m.AuthorizedEditRoles.LastIndexOf("All Users") > -1 <font color= "blue">Then</font>
<font color= "blue">                    </font>allItem.Selected = True
<font color= "blue"></font><font color= "blue">                End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                </font>authEditRoles.Items.Add(allItem)
<font color= "blue"></font>
<font color= "blue">                While</font> roles.Read()
<font color= "blue"></font>
<font color= "blue">                    </font>item <font color= "blue"></font>= New ListItem()
<font color= "blue">                    </font>item.Text = CType(roles("RoleName"), String)
<font color= "blue">                    </font>item.Value = roles("RoleID").ToString()
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    If </font>m.AuthorizedEditRoles.LastIndexOf(item.Text) > -1 <font color= "blue">Then</font>
<font color= "blue">                        </font>item.Selected = True
<font color= "blue"></font><font color= "blue">                    End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                    </font>authEditRoles.Items.Add(item)
<font color= "blue"></font>
<font color= "blue">                </font>End <font color= "blue"></font>While
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            ' Navigate back to admin page</font>
<font color= "blue">            </font>Response.Redirect(("TabLayout.aspx?tabid=" & tabId))
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*******************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' The BindData helper method is used to populate a asp:datalist</font>
<font color= "green">        ' server control with the current "edit access" permissions</font>
<font color= "green">        ' set within the portal configuration system</font>
<font color= "green">        '</font>
<font color= "green">        '*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Sub</font> BindData()
<font color= "blue"></font>
<font color= "green">            ' Obtain PortalSettings from Current Context</font>
<font color= "blue">            Dim </font>_portalSettings <font color= "blue">As </font>PortalSettings = CType(HttpContext.Current.Items("PortalSettings"), PortalSettings)
<font color= "blue"></font>
<font color= "blue">            Dim </font>value <font color= "blue">As </font>Object = GetModule()
<font color= "blue"></font><font color= "blue">            If </font>Not (value Is Nothing) <font color= "blue">Then</font>
<font color= "blue"></font>
<font color= "blue">                Dim </font>m <font color= "blue">As </font>ModuleSettings = CType(value, ModuleSettings)
<font color= "blue"></font>
<font color= "green">                ' Update Textbox Settings</font>
<font color= "blue">                </font>moduleTitle.Text = m.ModuleTitle
<font color= "blue">                </font>cacheTime.Text = m.CacheTime.ToString()
<font color= "blue">                </font>showMobile.Checked = m.ShowMobile
<font color= "blue"></font>
<font color= "green">                ' Populate checkbox list with all security roles for this portal</font>
<font color= "green">                ' and "check" the ones already configured for this module</font>
<font color= "blue">                Dim </font>admin <font color= "blue">As </font>New AdminDB()
<font color= "blue">                Dim </font>roles <font color= "blue">As </font>SqlDataReader = admin.GetPortalRoles(_portalSettings.PortalId)
<font color= "blue"></font>
<font color= "green">                ' Clear existing items in checkboxlist</font>
<font color= "blue">                </font>authEditRoles.Items.Clear()
<font color= "blue"></font>
<font color= "blue">                Dim </font>allItem <font color= "blue">As </font>New ListItem()
<font color= "blue">                </font>allItem.Text = "All Users"
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                If </font>m.AuthorizedEditRoles.LastIndexOf("All Users") > -1 <font color= "blue">Then</font>
<font color= "blue">                    </font>allItem.Selected = True
<font color= "blue"></font><font color= "blue">                End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                </font>authEditRoles.Items.Add(allItem)
<font color= "blue"></font>
<font color= "blue">                While</font> roles.Read()
<font color= "blue"></font>
<font color= "blue">                    Dim </font>item <font color= "blue">As </font>New ListItem()
<font color= "blue">                    </font>item.Text = CType(roles("RoleName"), String)
<font color= "blue">                    </font>item.Value = roles("RoleID").ToString()
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    If </font>m.AuthorizedEditRoles.LastIndexOf(item.Text) > -1 <font color= "blue">Then</font>
<font color= "blue">                        </font>item.Selected = True
<font color= "blue"></font><font color= "blue">                    End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                    </font>authEditRoles.Items.Add(item)
<font color= "blue"></font>
<font color= "blue">                </font>End <font color= "blue"></font>While
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">        Function</font> GetModule() As ModuleSettings
<font color= "blue"></font>
<font color= "green">            ' Obtain PortalSettings for this tab</font>
<font color= "blue">            Dim </font>_portalSettings <font color= "blue">As </font>PortalSettings = CType(HttpContext.Current.Items("PortalSettings"), PortalSettings)
<font color= "blue"></font>
<font color= "green">            ' Obtain selected module data'</font>
<font color= "blue">            Dim </font>_module <font color= "blue">As </font>ModuleSettings
<font color= "blue">            For Each</font> _module In _portalSettings.ActiveTab.Modules
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                If </font>_module.ModuleId = moduleId <font color= "blue">Then</font>
<font color= "blue">                    </font>Return <font color= "blue"></font>_module
<font color= "blue"></font><font color= "blue">                End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">            Next</font> _module
<font color= "blue"></font>
<font color= "blue">            </font>Return <font color= "blue"></font>Nothing
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">    End Class</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">End Namespace</font><font color= "blue"></font>
</pre>