<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">Imports</font> System
<font color= "blue">Imports</font> System.Collections
<font color= "blue">Imports</font> System.Configuration
<font color= "blue">Imports</font> System.Data
<font color= "blue">Imports</font> System.Data.SqlClient
<font color= "blue">Imports</font> System.Web
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">Namespace</font> ASPNetPortal
<font color= "blue"></font>
<font color= "green">    '*********************************************************************</font>
<font color= "green">    '</font>
<font color= "green">    ' PortalSecurity Class</font>
<font color= "green">    '</font>
<font color= "green">    ' The PortalSecurity class encapsulates two helper methods that enable</font>
<font color= "green">    ' developers to easily check the role status of the current browser client.</font>
<font color= "green">    '</font>
<font color= "green">    '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    Public Class</font> PortalSecurity
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' PortalSecurity.IsInRole() Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The IsInRole method enables developers to easily check the role</font>
<font color= "green">        ' status of the current browser client.</font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Shared Function</font> IsInRole(ByVal role As String) As Boolean
<font color= "blue"></font>
<font color= "blue">            </font>Return <font color= "blue"></font>HttpContext.Current.User.IsInRole(role)
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' PortalSecurity.IsInRoles() Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The IsInRoles method enables developers to easily check the role</font>
<font color= "green">        ' status of the current browser client against an array of roles</font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Shared Function</font> IsInRoles(ByVal roles As String) As Boolean
<font color= "blue"></font>
<font color= "blue">            Dim </font>context <font color= "blue">As </font>HttpContext = HttpContext.Current
<font color= "blue"></font>
<font color= "blue">            Dim </font>role <font color= "blue">As </font>String
<font color= "blue">            For Each</font> role In roles.Split(New Char() {";"c})
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                If </font>role <> "" And Not role Is Nothing And (role = "All Users" Or context.User.IsInRole(role)) <font color= "blue">Then</font>
<font color= "blue">                    </font>Return <font color= "blue"></font>True
<font color= "blue"></font><font color= "blue">                End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">            Next</font> role
<font color= "blue"></font>
<font color= "blue">            </font>Return <font color= "blue"></font>False
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' PortalSecurity.HasEditPermissions() Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The HasEditPermissions method enables developers to easily check </font>
<font color= "green">        ' whether the current browser client has access to edit the settings</font>
<font color= "green">        ' of a specified portal module</font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Shared Function</font> HasEditPermissions(ByVal moduleId As Integer) As Boolean
<font color= "blue"></font>
<font color= "green">            ' Obtain PortalSettings from Current Context</font>
<font color= "blue">            Dim </font>_portalSettings <font color= "blue">As </font>PortalSettings = CType(HttpContext.Current.Items("PortalSettings"), PortalSettings)
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("GetAuthRoles", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterModuleID <font color= "blue">As </font>New SqlParameter("@ModuleID", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterModuleID.Value = moduleId
<font color= "blue">            </font>myCommand.Parameters.Add(parameterModuleID)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterPortalID <font color= "blue">As </font>New SqlParameter("@PortalID", SqlDbType.Int, 4)
<font color= "blue">            </font>parameterPortalID.Value = _portalSettings.PortalId
<font color= "blue">            </font>myCommand.Parameters.Add(parameterPortalID)
<font color= "blue"></font>
<font color= "green">            ' Add out parameters to Sproc</font>
<font color= "blue">            Dim </font>parameterAccessRoles <font color= "blue">As </font>New SqlParameter("@AccessRoles", SqlDbType.NVarChar, 256)
<font color= "blue">            </font>parameterAccessRoles.Direction = ParameterDirection.Output
<font color= "blue">            </font>myCommand.Parameters.Add(parameterAccessRoles)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterEditRoles <font color= "blue">As </font>New SqlParameter("@EditRoles", SqlDbType.NVarChar, 256)
<font color= "blue">            </font>parameterEditRoles.Direction = ParameterDirection.Output
<font color= "blue">            </font>myCommand.Parameters.Add(parameterEditRoles)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute the command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>myCommand.ExecuteNonQuery()
<font color= "blue">            </font>myConnection.Close()
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            If </font>PortalSecurity.IsInRoles(CStr(parameterAccessRoles.Value)) = False Or PortalSecurity.IsInRoles(CStr(parameterEditRoles.Value)) = False <font color= "blue">Then</font>
<font color= "blue">                </font>Return <font color= "blue"></font>False
<font color= "blue"></font><font color= "blue">            Else</font><font color= "blue"></font>
<font color= "blue">                </font>Return <font color= "blue"></font>True
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">    End Class</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">    '*********************************************************************</font>
<font color= "green">    '</font>
<font color= "green">    ' UsersDB Class</font>
<font color= "green">    '</font>
<font color= "green">    ' The UsersDB class encapsulates all data logic necessary to add/login/query</font>
<font color= "green">    ' users within the Portal Users database.</font>
<font color= "green">    '</font>
<font color= "green">    ' Important Note: The UsersDB class is only used when forms-based cookie</font>
<font color= "green">    ' authentication is enabled within the portal.  When windows based</font>
<font color= "green">    ' authentication is used instead, then either the Windows SAM or Active Directory</font>
<font color= "green">    ' is used to store and validate all username/password credentials.</font>
<font color= "green">    '</font>
<font color= "green">    '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    Public Class</font> UsersDB
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' UsersDB.AddUser() Method <a name="AddUser"></a></font>
<font color= "green">        '</font>
<font color= "green">        ' The AddUser method inserts a new user record into the "Users" database table.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="AddUser.htm" style="color:green">AddUser Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> AddUser(ByVal fullName As String, ByVal email As String, ByVal password As String) As Integer
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("AddUser", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterFullName <font color= "blue">As </font>New SqlParameter("@Name", SqlDbType.NVarChar, 50)
<font color= "blue">            </font>parameterFullName.Value = fullName
<font color= "blue">            </font>myCommand.Parameters.Add(parameterFullName)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterEmail <font color= "blue">As </font>New SqlParameter("@Email", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterEmail.Value = email
<font color= "blue">            </font>myCommand.Parameters.Add(parameterEmail)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterPassword <font color= "blue">As </font>New SqlParameter("@Password", SqlDbType.NVarChar, 20)
<font color= "blue">            </font>parameterPassword.Value = password
<font color= "blue">            </font>myCommand.Parameters.Add(parameterPassword)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterUserId <font color= "blue">As </font>New SqlParameter("@UserID", SqlDbType.Int)
<font color= "blue">            </font>parameterUserId.Direction = ParameterDirection.Output
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserId)
<font color= "blue"></font>
<font color= "green">            ' Execute the command in a try/catch to catch duplicate username errors</font>
<font color= "blue">            Try</font>
<font color= "blue"></font>
<font color= "green">                ' Open the connection and execute the Command</font>
<font color= "blue">                </font>myConnection.Open()
<font color= "blue">                </font>myCommand.ExecuteNonQuery()
<font color= "blue"></font>
<font color= "blue">            Catch</font>
<font color= "blue"></font>
<font color= "green">                ' failed to create a new user</font>
<font color= "blue">                </font>Return <font color= "blue"></font>-1
<font color= "blue"></font>
<font color= "blue">            Finally</font>
<font color= "blue"></font>
<font color= "green">                ' Close the Connection</font>
<font color= "blue"></font><font color= "blue">                If </font>myConnection.State = ConnectionState.Open <font color= "blue">Then</font>
<font color= "blue">                    </font>myConnection.Close()
<font color= "blue"></font><font color= "blue">                End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">            End Try</font>
<font color= "blue"></font>
<font color= "blue">            </font>Return <font color= "blue"></font>CInt(parameterUserId.Value)
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' UsersDB.DeleteUser() Method <a name="DeleteUser"></a></font>
<font color= "green">        '</font>
<font color= "green">        ' The DeleteUser method deleted a  user record from the "Users" database table.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="DeleteUser.htm" style="color:green">DeleteUser Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Sub</font> DeleteUser(ByVal userId As Integer)
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("DeleteUser", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterUserId <font color= "blue">As </font>New SqlParameter("@UserID", SqlDbType.Int)
<font color= "blue">            </font>parameterUserId.Value = userId
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserId)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute the command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>myCommand.ExecuteNonQuery()
<font color= "blue">            </font>myConnection.Close()
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' UsersDB.UpdateUser() Method <a name="DeleteUser"></a></font>
<font color= "green">        '</font>
<font color= "green">        ' The UpdateUser method deleted a  user record from the "Users" database table.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="UpdateUser.htm" style="color:green">UpdateUser Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Sub</font> UpdateUser(ByVal userId As Integer, ByVal email As String, ByVal password As String)
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("UpdateUser", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterUserId <font color= "blue">As </font>New SqlParameter("@UserID", SqlDbType.Int)
<font color= "blue">            </font>parameterUserId.Value = userId
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserId)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterEmail <font color= "blue">As </font>New SqlParameter("@Email", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterEmail.Value = email
<font color= "blue">            </font>myCommand.Parameters.Add(parameterEmail)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterPassword <font color= "blue">As </font>New SqlParameter("@Password", SqlDbType.NVarChar, 20)
<font color= "blue">            </font>parameterPassword.Value = password
<font color= "blue">            </font>myCommand.Parameters.Add(parameterPassword)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute the command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>myCommand.ExecuteNonQuery()
<font color= "blue">            </font>myConnection.Close()
<font color= "blue"></font>
<font color= "blue">        End Sub</font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' UsersDB.GetRolesByUser() Method <a name="GetRolesByUser"></a></font>
<font color= "green">        '</font>
<font color= "green">        ' The DeleteUser method deleted a  user record from the "Users" database table.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="GetRolesByUser.htm" style="color:green">GetRolesByUser Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> GetRolesByUser(ByVal email As String) As SqlDataReader
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("GetRolesByUser", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterEmail <font color= "blue">As </font>New SqlParameter("@Email", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterEmail.Value = email
<font color= "blue">            </font>myCommand.Parameters.Add(parameterEmail)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute the command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            Dim </font>dr <font color= "blue">As </font>SqlDataReader = myCommand.ExecuteReader(CommandBehavior.CloseConnection)
<font color= "blue"></font>
<font color= "green">            ' Return the datareader</font>
<font color= "blue">            </font>Return <font color= "blue"></font>dr
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' GetSingleUser Method</font>
<font color= "green">        '</font>
<font color= "green">        ' The GetSingleUser method returns a SqlDataReader containing details</font>
<font color= "green">        ' about a specific user from the Users database table.</font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> GetSingleUser(ByVal email As String) As SqlDataReader
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("GetSingleUser", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterEmail <font color= "blue">As </font>New SqlParameter("@Email", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterEmail.Value = email
<font color= "blue">            </font>myCommand.Parameters.Add(parameterEmail)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute the command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            Dim </font>dr <font color= "blue">As </font>SqlDataReader = myCommand.ExecuteReader(CommandBehavior.CloseConnection)
<font color= "blue"></font>
<font color= "green">            ' Return the datareader</font>
<font color= "blue">            </font>Return <font color= "blue"></font>dr
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' GetRoles() Method <a name="GetRoles"></a></font>
<font color= "green">        '</font>
<font color= "green">        ' The GetRoles method returns a list of role names for the user.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="GetRolesByUser.htm" style="color:green">GetRolesByUser Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> GetRoles(ByVal email As String) As String()
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("GetRolesByUser", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterEmail <font color= "blue">As </font>New SqlParameter("@Email", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterEmail.Value = email
<font color= "blue">            </font>myCommand.Parameters.Add(parameterEmail)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute the command</font>
<font color= "blue">            Dim </font>dr <font color= "blue">As </font>SqlDataReader
<font color= "blue"></font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>dr <font color= "blue"></font>= myCommand.ExecuteReader(CommandBehavior.CloseConnection)
<font color= "blue"></font>
<font color= "green">            ' create a String array from the data</font>
<font color= "blue">            Dim </font>userRoles <font color= "blue">As </font>New ArrayList()
<font color= "blue"></font>
<font color= "blue">            While</font> dr.Read()
<font color= "blue">                </font>userRoles.Add(dr("RoleName"))
<font color= "blue">            </font>End <font color= "blue"></font>While
<font color= "blue"></font>
<font color= "blue">            </font>dr.Close()
<font color= "blue"></font>
<font color= "green">            ' Return the String array of roles</font>
<font color= "blue">            </font>Return <font color= "blue"></font>CType(userRoles.ToArray(GetType(String)), String())
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">        '*********************************************************************</font>
<font color= "green">        '</font>
<font color= "green">        ' UsersDB.Login() Method <a name="Login"></a></font>
<font color= "green">        '</font>
<font color= "green">        ' The Login method validates a email/password pair against credentials</font>
<font color= "green">        ' stored in the users database.  If the email/password pair is valid,</font>
<font color= "green">        ' the method returns user's name.</font>
<font color= "green">        '</font>
<font color= "green">        ' Other relevant sources:</font>
<font color= "green">        '     + <a href="UserLogin.htm" style="color:green">UserLogin Stored Procedure</a></font>
<font color= "green">        '</font>
<font color= "green">        '*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        Public Function</font> Login(ByVal email As String, ByVal password As String) As String
<font color= "blue"></font>
<font color= "green">            ' Create Instance of Connection and Command Object</font>
<font color= "blue">            Dim </font>myConnection <font color= "blue">As </font>New SqlConnection(ConfigurationSettings.AppSettings("connectionString"))
<font color= "blue">            Dim </font>myCommand <font color= "blue">As </font>New SqlCommand("UserLogin", myConnection)
<font color= "blue"></font>
<font color= "green">            ' Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure
<font color= "blue"></font>
<font color= "green">            ' Add Parameters to SPROC</font>
<font color= "blue">            Dim </font>parameterEmail <font color= "blue">As </font>New SqlParameter("@Email", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterEmail.Value = email
<font color= "blue">            </font>myCommand.Parameters.Add(parameterEmail)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterPassword <font color= "blue">As </font>New SqlParameter("@Password", SqlDbType.NVarChar, 20)
<font color= "blue">            </font>parameterPassword.Value = password
<font color= "blue">            </font>myCommand.Parameters.Add(parameterPassword)
<font color= "blue"></font>
<font color= "blue">            Dim </font>parameterUserName <font color= "blue">As </font>New SqlParameter("@UserName", SqlDbType.NVarChar, 100)
<font color= "blue">            </font>parameterUserName.Direction = ParameterDirection.Output
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserName)
<font color= "blue"></font>
<font color= "green">            ' Open the database connection and execute the command</font>
<font color= "blue">            </font>myConnection.Open()
<font color= "blue">            </font>myCommand.ExecuteNonQuery()
<font color= "blue">            </font>myConnection.Close()
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            If </font>Not parameterUserName.Value Is Nothing And Not parameterUserName.Value Is System.DBNull.Value <font color= "blue">Then</font>
<font color= "blue">                </font>Return <font color= "blue"></font>CStr(parameterUserName.Value).Trim()
<font color= "blue"></font><font color= "blue">            Else</font><font color= "blue"></font>
<font color= "blue">                </font>Return <font color= "blue"></font>String.Empty
<font color= "blue"></font><font color= "blue">            End If</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        End Function</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">    End Class</font><font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">End Namespace</font><font color= "blue"></font>
</pre>